# Production Docker Compose Configuration
version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bonymous-app
    ports:
      - "4000:4000"
    depends_on:
      - mongodb
      - postgresql
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://mongodb:27017/bonymous
      - SECRET=${SECRET}
      - DATABASE_TYPE=PostgreSQL
      - GOOGLE=${GOOGLE}
      - PGHOST=postgresql
      - PGPORT=5432
      - PGDATABASE=bonymous
      - PGUSER=postgres
      - PGPASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./uploads:/app/uploads
    networks:
      - bonymous-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/api/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mongodb:
    image: mongo:6.0
    container_name: bonymous-mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=bonymous
    volumes:
      - mongodb_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    ports:
      - "27017:27017"
    networks:
      - bonymous-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgresql:
    image: postgres:15
    container_name: bonymous-postgresql
    environment:
      - POSTGRES_DB=bonymous
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgresql_data:/var/lib/postgresql/data
      - ./init-postgres.sql:/docker-entrypoint-initdb.d/init-postgres.sql:ro
    ports:
      - "5432:5432"
    networks:
      - bonymous-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d bonymous"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  mongodb_data:
    driver: local
  postgresql_data:
    driver: local

networks:
  bonymous-network:
    driver: bridge